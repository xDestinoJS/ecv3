/// <reference types="node" />
import type { ServerResponse } from 'node:http';
import type { DiscordAPIError, HTTPError, RateLimitError } from '@discordjs/rest';
import type { Dispatcher } from 'undici';
/**
 * Populates a server response with the data from a Discord 2xx REST response
 *
 * @param res - The server response to populate
 * @param data - The data to populate the response with
 */
export declare function populateSuccessfulResponse(res: ServerResponse, data: Dispatcher.ResponseData): Promise<void>;
/**
 * Populates a server response with the data from a Discord non-2xx REST response that is NOT a 429
 *
 * @param res - The server response to populate
 * @param error - The error to populate the response with
 */
export declare function populateGeneralErrorResponse(res: ServerResponse, error: DiscordAPIError | HTTPError): void;
/**
 * Populates a server response with the data from a Discord 429 REST response
 *
 * @param res - The server response to populate
 * @param error - The error to populate the response with
 */
export declare function populateRatelimitErrorResponse(res: ServerResponse, error: RateLimitError): void;
/**
 * Populates a server response with data relevant for a timeout
 *
 * @param res - The sever response to populate
 */
export declare function populateAbortErrorResponse(res: ServerResponse): void;
//# sourceMappingURL=responseHelpers.d.ts.map