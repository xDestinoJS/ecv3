'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const promises = require('node:stream/promises');

async function populateSuccessfulResponse(res, data) {
  res.statusCode = data.statusCode;
  for (const header of Object.keys(data.headers)) {
    if (header.startsWith("x-ratelimit")) {
      continue;
    }
    res.setHeader(header, data.headers[header]);
  }
  await promises.pipeline(data.body, res);
}
function populateGeneralErrorResponse(res, error) {
  res.statusCode = error.status;
  if ("rawError" in error) {
    res.setHeader("Content-Type", "application/json");
    res.write(JSON.stringify(error.rawError));
  }
}
function populateRatelimitErrorResponse(res, error) {
  res.statusCode = 429;
  res.setHeader("Retry-After", error.timeToReset / 1e3);
}
function populateAbortErrorResponse(res) {
  res.statusCode = 504;
  res.statusMessage = "Upstream timed out";
}

exports.populateAbortErrorResponse = populateAbortErrorResponse;
exports.populateGeneralErrorResponse = populateGeneralErrorResponse;
exports.populateRatelimitErrorResponse = populateRatelimitErrorResponse;
exports.populateSuccessfulResponse = populateSuccessfulResponse;
//# sourceMappingURL=responseHelpers.cjs.map
