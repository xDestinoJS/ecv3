{"version":3,"file":"responseHelpers.cjs","sources":["../../src/util/responseHelpers.ts"],"sourcesContent":["import type { ServerResponse } from 'node:http';\nimport { pipeline } from 'node:stream/promises';\nimport type { DiscordAPIError, HTTPError, RateLimitError } from '@discordjs/rest';\nimport type { Dispatcher } from 'undici';\n\n/**\n * Populates a server response with the data from a Discord 2xx REST response\n *\n * @param res - The server response to populate\n * @param data - The data to populate the response with\n */\nexport async function populateSuccessfulResponse(res: ServerResponse, data: Dispatcher.ResponseData): Promise<void> {\n\tres.statusCode = data.statusCode;\n\n\tfor (const header of Object.keys(data.headers)) {\n\t\t// Strip ratelimit headers\n\t\tif (header.startsWith('x-ratelimit')) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tres.setHeader(header, data.headers[header]!);\n\t}\n\n\tawait pipeline(data.body, res);\n}\n\n/**\n * Populates a server response with the data from a Discord non-2xx REST response that is NOT a 429\n *\n * @param res - The server response to populate\n * @param error - The error to populate the response with\n */\nexport function populateGeneralErrorResponse(res: ServerResponse, error: DiscordAPIError | HTTPError): void {\n\tres.statusCode = error.status;\n\n\tif ('rawError' in error) {\n\t\tres.setHeader('Content-Type', 'application/json');\n\t\tres.write(JSON.stringify(error.rawError));\n\t}\n}\n\n/**\n * Populates a server response with the data from a Discord 429 REST response\n *\n * @param res - The server response to populate\n * @param error - The error to populate the response with\n */\nexport function populateRatelimitErrorResponse(res: ServerResponse, error: RateLimitError): void {\n\tres.statusCode = 429;\n\tres.setHeader('Retry-After', error.timeToReset / 1000);\n}\n\n/**\n * Populates a server response with data relevant for a timeout\n *\n * @param res - The sever response to populate\n */\nexport function populateAbortErrorResponse(res: ServerResponse): void {\n\tres.statusCode = 504;\n\tres.statusMessage = 'Upstream timed out';\n}\n"],"names":["pipeline"],"mappings":";;;;;;AACO,eAAe,0BAA0B,CAAC,GAAG,EAAE,IAAI,EAAE;AAC5D,EAAE,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,EAAE,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AAClD,IAAI,IAAI,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;AAC1C,MAAM,SAAS;AACf,KAAK;AACL,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,MAAMA,iBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACjC,CAAC;AACM,SAAS,4BAA4B,CAAC,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;AAChC,EAAE,IAAI,UAAU,IAAI,KAAK,EAAE;AAC3B,IAAI,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;AACtD,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9C,GAAG;AACH,CAAC;AACM,SAAS,8BAA8B,CAAC,GAAG,EAAE,KAAK,EAAE;AAC3D,EAAE,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;AACvB,EAAE,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC;AACxD,CAAC;AACM,SAAS,0BAA0B,CAAC,GAAG,EAAE;AAChD,EAAE,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;AACvB,EAAE,GAAG,CAAC,aAAa,GAAG,oBAAoB,CAAC;AAC3C;;;;;;;"}