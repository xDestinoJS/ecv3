'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const node_url = require('node:url');
const rest = require('@discordjs/rest');
const responseHelpers = require('../util/responseHelpers.cjs');

function proxyRequests(rest$1) {
  return async (req, res) => {
    const { method, url } = req;
    if (!method || !url) {
      throw new TypeError("Invalid request. Missing method and/or url, implying that this is not a Server IncomingMesage");
    }
    const fullRoute = new node_url.URL(url, "http://noop").pathname.replace(/^\/api(\/v\d+)?/, "");
    try {
      const discordResponse = await rest$1.raw({
        body: req,
        fullRoute,
        method,
        passThroughBody: true,
        headers: {
          "Content-Type": req.headers["content-type"]
        }
      });
      await responseHelpers.populateSuccessfulResponse(res, discordResponse);
    } catch (error) {
      if (error instanceof rest.DiscordAPIError || error instanceof rest.HTTPError) {
        responseHelpers.populateGeneralErrorResponse(res, error);
      } else if (error instanceof rest.RateLimitError) {
        responseHelpers.populateRatelimitErrorResponse(res, error);
      } else if (error instanceof Error && error.name === "AbortError") {
        responseHelpers.populateAbortErrorResponse(res);
      } else {
        throw error;
      }
    } finally {
      res.end();
    }
  };
}

exports.proxyRequests = proxyRequests;
//# sourceMappingURL=proxyRequests.cjs.map
